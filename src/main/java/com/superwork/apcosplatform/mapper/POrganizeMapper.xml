<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.superwork.apcosplatform.mapper.POrganizeMapper">
    <resultMap id="BaseResultMap" type="com.superwork.apcosplatform.domain.POrganize">
        <id column="ID" jdbcType="VARCHAR" property="id"/>
        <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName"/>
        <result column="PID" jdbcType="VARCHAR" property="pid"/>
        <result column="CREATE_DATE" jdbcType="DATE" property="createDate"/>
        <result column="CREATE_ID" jdbcType="VARCHAR" property="createId"/>
        <result column="EDIT_DATE" jdbcType="DATE" property="editDate"/>
        <result column="EDIT_ID" jdbcType="VARCHAR" property="editId"/>
        <result column="COMPANY_ID" jdbcType="VARCHAR" property="companyId"/>
        <result column="LEVELS" jdbcType="VARCHAR" property="levels"/>
        <result column="REMARK" jdbcType="VARCHAR" property="remark"/>
        <result column="ATTR1" jdbcType="VARCHAR" property="attr1"/>
        <result column="ATTR2" jdbcType="VARCHAR" property="attr2"/>
        <result column="ATTR3" jdbcType="VARCHAR" property="attr3"/>
        <result column="CREATENAME" jdbcType="VARCHAR" property="createName"/>
        <result column="MNUM" jdbcType="VARCHAR" property="num"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, ORG_NAME, PID, CREATE_DATE, CREATE_ID, EDIT_DATE, EDIT_ID, COMPANY_ID, LEVELS,
    REMARK, ATTR1, ATTR2, ATTR3
  </sql>
    <select id="selectByExample" parameterType="com.superwork.apcosplatform.domain.POrganizeExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from P_ORGANIZE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from P_ORGANIZE
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from P_ORGANIZE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.superwork.apcosplatform.domain.POrganizeExample">
        delete from P_ORGANIZE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.superwork.apcosplatform.domain.POrganize">
        insert into P_ORGANIZE (ID, ORG_NAME, PID,
        CREATE_DATE, CREATE_ID, EDIT_DATE,
        EDIT_ID, COMPANY_ID, LEVELS,
        REMARK, ATTR1, ATTR2,
        ATTR3)
        values (#{id,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR},
        #{createDate,jdbcType=DATE}, #{createId,jdbcType=VARCHAR}, #{editDate,jdbcType=DATE},
        #{editId,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{levels,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{attr1,jdbcType=VARCHAR}, #{attr2,jdbcType=VARCHAR},
        #{attr3,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.superwork.apcosplatform.domain.POrganize">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            select P_ORGANIZE_SEQ.NEXTVAL from dual
        </selectKey>
        insert into P_ORGANIZE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ID,
            <if test="orgName != null">
                ORG_NAME,
            </if>
            <if test="pid != null">
                PID,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="createId != null">
                CREATE_ID,
            </if>
            <if test="editDate != null">
                EDIT_DATE,
            </if>
            <if test="editId != null">
                EDIT_ID,
            </if>
            <if test="companyId != null">
                COMPANY_ID,
            </if>
            <if test="levels != null">
                LEVELS,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
            <if test="attr1 != null">
                ATTR1,
            </if>
            <if test="attr2 != null">
                ATTR2,
            </if>
            <if test="attr3 != null">
                ATTR3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=VARCHAR},
            <if test="orgName != null">
                #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="editDate != null">
                #{editDate,jdbcType=DATE},
            </if>
            <if test="editId != null">
                #{editId,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="levels != null">
                #{levels,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="attr1 != null">
                #{attr1,jdbcType=VARCHAR},
            </if>
            <if test="attr2 != null">
                #{attr2,jdbcType=VARCHAR},
            </if>
            <if test="attr3 != null">
                #{attr3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.superwork.apcosplatform.domain.POrganizeExample"
            resultType="java.lang.Long">
        select count(*) from P_ORGANIZE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update P_ORGANIZE
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.orgName != null">
                ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
            </if>
            <if test="record.pid != null">
                PID = #{record.pid,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                CREATE_DATE = #{record.createDate,jdbcType=DATE},
            </if>
            <if test="record.createId != null">
                CREATE_ID = #{record.createId,jdbcType=VARCHAR},
            </if>
            <if test="record.editDate != null">
                EDIT_DATE = #{record.editDate,jdbcType=DATE},
            </if>
            <if test="record.editId != null">
                EDIT_ID = #{record.editId,jdbcType=VARCHAR},
            </if>
            <if test="record.companyId != null">
                COMPANY_ID = #{record.companyId,jdbcType=VARCHAR},
            </if>
            <if test="record.levels != null">
                LEVELS = #{record.levels,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.attr1 != null">
                ATTR1 = #{record.attr1,jdbcType=VARCHAR},
            </if>
            <if test="record.attr2 != null">
                ATTR2 = #{record.attr2,jdbcType=VARCHAR},
            </if>
            <if test="record.attr3 != null">
                ATTR3 = #{record.attr3,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update P_ORGANIZE
        set ID = #{record.id,jdbcType=VARCHAR},
        ORG_NAME = #{record.orgName,jdbcType=VARCHAR},
        PID = #{record.pid,jdbcType=VARCHAR},
        CREATE_DATE = #{record.createDate,jdbcType=DATE},
        CREATE_ID = #{record.createId,jdbcType=VARCHAR},
        EDIT_DATE = #{record.editDate,jdbcType=DATE},
        EDIT_ID = #{record.editId,jdbcType=VARCHAR},
        COMPANY_ID = #{record.companyId,jdbcType=VARCHAR},
        LEVELS = #{record.levels,jdbcType=VARCHAR},
        REMARK = #{record.remark,jdbcType=VARCHAR},
        ATTR1 = #{record.attr1,jdbcType=VARCHAR},
        ATTR2 = #{record.attr2,jdbcType=VARCHAR},
        ATTR3 = #{record.attr3,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.superwork.apcosplatform.domain.POrganize">
        update P_ORGANIZE
        <set>
            <if test="orgName != null">
                ORG_NAME = #{orgName,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                PID = #{pid,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=DATE},
            </if>
            <if test="createId != null">
                CREATE_ID = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="editDate != null">
                EDIT_DATE = #{editDate,jdbcType=DATE},
            </if>
            <if test="editId != null">
                EDIT_ID = #{editId,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                COMPANY_ID = #{companyId,jdbcType=VARCHAR},
            </if>
            <if test="levels != null">
                LEVELS = #{levels,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="attr1 != null">
                ATTR1 = #{attr1,jdbcType=VARCHAR},
            </if>
            <if test="attr2 != null">
                ATTR2 = #{attr2,jdbcType=VARCHAR},
            </if>
            <if test="attr3 != null">
                ATTR3 = #{attr3,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.superwork.apcosplatform.domain.POrganize">
    update P_ORGANIZE
    set ORG_NAME = #{orgName,jdbcType=VARCHAR},
      PID = #{pid,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=DATE},
      CREATE_ID = #{createId,jdbcType=VARCHAR},
      EDIT_DATE = #{editDate,jdbcType=DATE},
      EDIT_ID = #{editId,jdbcType=VARCHAR},
      COMPANY_ID = #{companyId,jdbcType=VARCHAR},
      LEVELS = #{levels,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      ATTR1 = #{attr1,jdbcType=VARCHAR},
      ATTR2 = #{attr2,jdbcType=VARCHAR},
      ATTR3 = #{attr3,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
    <select id="listOrganize" parameterType="com.superwork.apcosplatform.domain.POrganize" resultMap="BaseResultMap">
        SELECT A.*,B.USER_ACCOUNT CREATENAME,NVL(C.NUM,0) MNUM FROM P_ORGANIZE A LEFT OUTER JOIN P_SYS_USER B
        ON A.CREATE_ID = B.USER_ID LEFT OUTER JOIN (SELECT COUNT(*) as NUM,ORG_ID FROM p_org_user group by ORG_ID) C
        ON A.ID = C.ORG_ID
        WHERE A.CREATE_ID = #{createId}
        <if test="orgName != null and orgName != ''">
            AND A.ORG_NAME LIKE '%'||#{orgName}||'%'
        </if>
        ORDER BY A.CREATE_DATE DESC
    </select>

    <select id="listOrganizeOnUser"  resultMap="BaseResultMap">
        <bind name="q1" value="leves + '%'"/>
        <bind name="q2" value="leves +'.'+ '%'"/>
        SELECT * FROM P_ORGANIZE WHERE LEVELS LIKE #{q1} or LEVELS LIKE #{q2}
    </select>

    <select id="selectAutoId" resultType="java.lang.String">
select P_ORGANIZE_SEQ.NEXTVAL from dual

    </select>
</mapper>